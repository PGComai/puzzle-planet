[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://b4t2uesmum8pn"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_jbcks"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_qpany"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, 0.5]
op_type = 6

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_0ntfn"]
size = Vector2(635.903, 392.493)
expression = "output1 = ez_mantle_effect;"

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_f640s"]
size = Vector2(617.583, 187.65)
expression = "global uniform float ez_mantle_effect;"

[sub_resource type="Gradient" id="Gradient_8ido4"]
interpolation_mode = 2
colors = PackedColorArray(0.147672, 0.147672, 0.147672, 1, 0.241156, 0.241156, 0.241156, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_miwr3"]
frequency = 0.046

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_asxvv"]
width = 128
height = 128
seamless = true
color_ramp = SubResource("Gradient_8ido4")
noise = SubResource("FastNoiseLite_miwr3")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_na102"]
texture = SubResource("NoiseTexture2D_asxvv")
texture_type = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_73jvf"]
parameter_name = "emission_color"
default_value_enabled = true
default_value = Color(0.0767046, 0.0525974, 0.0494796, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_xfasm"]
frequency = 0.023

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_36s67"]
width = 128
height = 128
seamless = true
as_normal_map = true
bump_strength = 2.4
noise = SubResource("FastNoiseLite_xfasm")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_7tsbw"]
texture = SubResource("NoiseTexture2D_36s67")
texture_type = 2

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_s3sco"]
operator = 4

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_ecrgi"]
default_input_values = [2, true, 3, 1.5]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_s12x2"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_tf7yk"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, 0.5]
op_type = 6

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_w76mm"]
constant = Color(0.476578, 0.476578, 0.476578, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2 : source_color;
uniform vec4 emission_color : source_color = vec4(0.076705, 0.052597, 0.049480, 1.000000);
uniform sampler2D tex_frg_4 : hint_normal;


// GlobalExpression:0
	global uniform float ez_mantle_effect;

void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.476578, 0.476578, 0.476578, 1.000000);


	float n_out12p0;
// Expression:12
	n_out12p0 = 0.0;
	{
		n_out12p0 = ez_mantle_effect;
	}


// Fresnel:6
	float n_in6p3 = 1.50000;
	float n_out6p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in6p3);


// FloatOp:7
	float n_out7p0 = n_out12p0 * n_out6p0;


// Mix:8
	vec4 n_out8p0 = mix(n_out2p0, n_out9p0, n_out7p0);


// ColorParameter:3
	vec4 n_out3p0 = emission_color;


	vec3 n_out5p0;
// ColorOp:5
	{
		float base = vec3(n_out2p0.xyz).x;
		float blend = vec3(n_out3p0.xyz).x;
		if (base < 0.5) {
			n_out5p0.x = 2.0 * base * blend;
		} else {
			n_out5p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out2p0.xyz).y;
		float blend = vec3(n_out3p0.xyz).y;
		if (base < 0.5) {
			n_out5p0.y = 2.0 * base * blend;
		} else {
			n_out5p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out2p0.xyz).z;
		float blend = vec3(n_out3p0.xyz).z;
		if (base < 0.5) {
			n_out5p0.z = 2.0 * base * blend;
		} else {
			n_out5p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// ColorConstant:10
	vec4 n_out10p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// Mix:11
	vec4 n_out11p0 = mix(vec4(n_out5p0, 0.0), n_out10p0, n_out7p0);


// Texture2D:4
	vec4 n_out4p0 = texture(tex_frg_4, UV);


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	EMISSION = vec3(n_out11p0.xyz);
	NORMAL_MAP = vec3(n_out4p0.xyz);


}
"
nodes/fragment/0/position = Vector2(3040, -140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_na102")
nodes/fragment/2/position = Vector2(220, -160)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_73jvf")
nodes/fragment/3/position = Vector2(-400, 340)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_7tsbw")
nodes/fragment/4/position = Vector2(280, 720)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_s3sco")
nodes/fragment/5/position = Vector2(1060, 200)
nodes/fragment/6/node = SubResource("VisualShaderNodeFresnel_ecrgi")
nodes/fragment/6/position = Vector2(840, -220)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_s12x2")
nodes/fragment/7/position = Vector2(1400, -500)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_tf7yk")
nodes/fragment/8/position = Vector2(2140, -460)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_w76mm")
nodes/fragment/9/position = Vector2(1300, -220)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_jbcks")
nodes/fragment/10/position = Vector2(1300, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_qpany")
nodes/fragment/11/position = Vector2(2120, -160)
nodes/fragment/12/node = SubResource("VisualShaderNodeExpression_0ntfn")
nodes/fragment/12/position = Vector2(380, -700)
nodes/fragment/12/size = Vector2(635.903, 392.493)
nodes/fragment/12/input_ports = ""
nodes/fragment/12/output_ports = "0,0,output1;"
nodes/fragment/12/expression = "output1 = ez_mantle_effect;"
nodes/fragment/13/node = SubResource("VisualShaderNodeGlobalExpression_f640s")
nodes/fragment/13/position = Vector2(-400, -640)
nodes/fragment/13/size = Vector2(617.583, 187.65)
nodes/fragment/13/input_ports = ""
nodes/fragment/13/output_ports = ""
nodes/fragment/13/expression = "global uniform float ez_mantle_effect;"
nodes/fragment/connections = PackedInt32Array(4, 0, 0, 9, 3, 0, 5, 1, 2, 0, 5, 0, 6, 0, 7, 1, 7, 0, 8, 2, 7, 0, 11, 2, 9, 0, 8, 1, 10, 0, 11, 1, 12, 0, 7, 0, 5, 0, 11, 0, 2, 0, 8, 0, 8, 0, 0, 0, 11, 0, 0, 5)
