[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://daqyqsjkebgkf"]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_85an2"]
operator = 4

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_bnb1e"]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_23rwv"]
constant = Color(0.826301, 0.389862, 0.36147, 1)

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_83yuc"]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_uhpkf"]
constant = Color(0.408899, 0.177459, 0.193305, 1)

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ertj1"]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_q0aq7"]
constant = Color(0.680053, 0.233986, 0.219184, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// ColorConstant:18
	vec4 n_out18p0 = vec4(0.826301, 0.389862, 0.361470, 1.000000);


	vec3 n_out15p0;
// ColorOp:15
	vec3 n_in15p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in15p1 = vec3(0.00000, 0.00000, 0.00000);
	{
		float base = n_in15p0.x;
		float blend = n_in15p1.x;
		if (base < 0.5) {
			n_out15p0.x = 2.0 * base * blend;
		} else {
			n_out15p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_in15p0.y;
		float blend = n_in15p1.y;
		if (base < 0.5) {
			n_out15p0.y = 2.0 * base * blend;
		} else {
			n_out15p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_in15p0.z;
		float blend = n_in15p1.z;
		if (base < 0.5) {
			n_out15p0.z = 2.0 * base * blend;
		} else {
			n_out15p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


	vec3 n_out17p0;
// ColorOp:17
	{
		float base = vec3(n_out18p0.xyz).x;
		float blend = n_out15p0.x;
		if (base < 0.5) {
			n_out17p0.x = 2.0 * base * blend;
		} else {
			n_out17p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out18p0.xyz).y;
		float blend = n_out15p0.y;
		if (base < 0.5) {
			n_out17p0.y = 2.0 * base * blend;
		} else {
			n_out17p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out18p0.xyz).z;
		float blend = n_out15p0.z;
		if (base < 0.5) {
			n_out17p0.z = 2.0 * base * blend;
		} else {
			n_out17p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// ColorConstant:20
	vec4 n_out20p0 = vec4(0.408899, 0.177459, 0.193305, 1.000000);


	vec3 n_out19p0;
// ColorOp:19
	{
		float base = n_out17p0.x;
		float blend = vec3(n_out20p0.xyz).x;
		if (base < 0.5) {
			n_out19p0.x = 2.0 * base * blend;
		} else {
			n_out19p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out17p0.y;
		float blend = vec3(n_out20p0.xyz).y;
		if (base < 0.5) {
			n_out19p0.y = 2.0 * base * blend;
		} else {
			n_out19p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out17p0.z;
		float blend = vec3(n_out20p0.xyz).z;
		if (base < 0.5) {
			n_out19p0.z = 2.0 * base * blend;
		} else {
			n_out19p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// ColorConstant:22
	vec4 n_out22p0 = vec4(0.680053, 0.233986, 0.219184, 1.000000);


	vec3 n_out21p0;
// ColorOp:21
	{
		float base = n_out19p0.x;
		float blend = vec3(n_out22p0.xyz).x;
		if (base < 0.5) {
			n_out21p0.x = 2.0 * base * blend;
		} else {
			n_out21p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out19p0.y;
		float blend = vec3(n_out22p0.xyz).y;
		if (base < 0.5) {
			n_out21p0.y = 2.0 * base * blend;
		} else {
			n_out21p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out19p0.z;
		float blend = vec3(n_out22p0.xyz).z;
		if (base < 0.5) {
			n_out21p0.z = 2.0 * base * blend;
		} else {
			n_out21p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	ALBEDO = n_out21p0;


}
"
nodes/fragment/0/position = Vector2(4640, -440)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorOp_85an2")
nodes/fragment/15/position = Vector2(960, -80)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorOp_bnb1e")
nodes/fragment/17/position = Vector2(1780, -420)
nodes/fragment/18/node = SubResource("VisualShaderNodeColorConstant_23rwv")
nodes/fragment/18/position = Vector2(1140, -340)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorOp_83yuc")
nodes/fragment/19/position = Vector2(2460, -460)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorConstant_uhpkf")
nodes/fragment/20/position = Vector2(1960, -40)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorOp_ertj1")
nodes/fragment/21/position = Vector2(3140, -320)
nodes/fragment/22/node = SubResource("VisualShaderNodeColorConstant_q0aq7")
nodes/fragment/22/position = Vector2(2680, -80)
nodes/fragment/connections = PackedInt32Array(18, 0, 17, 0, 15, 0, 17, 1, 17, 0, 19, 0, 19, 0, 21, 0, 20, 0, 19, 1, 22, 0, 21, 1, 21, 0, 0, 0)
nodes/light/0/position = Vector2(960, 220)
